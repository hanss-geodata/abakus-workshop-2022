"use strict";(globalThis.webpackChunkabakus_workshop=globalThis.webpackChunkabakus_workshop||[]).push([[8023],{28023:(e,s,t)=>{t.r(s),t.d(s,{execute:()=>o});var a=t(10064),r=t(92026);let n;function o(e,s){let t=s.responseType;t?"array-buffer"!==t&&"blob"!==t&&"json"!==t&&"native"!==t&&"native-request-init"!==t&&"text"!==t&&(t="text"):t="json",s.responseType=t;const o=(0,r.Wg)(s.signal);return delete s.signal,globalThis.invokeStaticMessage("request",{url:e,options:s},{signal:o}).then((async r=>{let l,i,u,c,b;if(r.data)if(r.data instanceof ArrayBuffer){if(!("json"!==t&&"text"!==t&&"blob"!==t||(l=new Blob([r.data]),"json"!==t&&"text"!==t||(n||(n=new FileReaderSync),c=n.readAsText(l),"json"!==t)))){try{i=JSON.parse(c||null)}catch(h){const t={...h,url:e,requestOptions:s};throw new a.Z("request:server",h.message,t)}if(i.error){const t={...i.error,url:e,requestOptions:s};throw new a.Z("request:server",i.error.message,t)}}}else"native"===t&&(r.data.signal=o,u=await fetch(r.data.url,r.data));switch(t){case"blob":b=l;break;case"json":b=i;break;case"native":b=u;break;case"text":b=c;break;default:b=r.data}return{data:b,requestOptions:s,ssl:r.ssl,url:e}}))}}}]);
//# sourceMappingURL=8023.ad30b30b.chunk.js.map